{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQH,EAAKI,SAASC,MACtBC,EAAON,EAAKI,SAASG,KACrBC,EAASR,EAAKI,SAASK,OAuB7B,SAASC,EAAQC,GACfC,EAAAd,GAASe,OAAOC,QAAQH,GAE1B,SAASI,EAAOJ,GACdC,EAAAd,GAASe,OAAOC,QAAQH,GAE1B,SAASK,EAAcC,EAAUC,GAC/B,OAAQC,QAAU,IAAIC,SAAQ,CAACC,EAASC,KACtC,MAAMC,EAAgBC,KAAKC,SAAW,GAIpCC,YAAS,KACTH,EACIF,EAAQ,uBAAqBJ,QAAiBC,QAAaI,EACzD,sBAAML,QAA8BC,UACzCA,MArCPlB,EAAK2B,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBACN,MAAMC,EAAcC,OAAOvB,EAAOwB,OAC5BC,EAAYF,OAAOzB,EAAK0B,OAC9B,IAAIE,EAAaH,OAAO5B,EAAM6B,OAG9B,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAaK,GAAK,EACrCnB,EAAcmB,EAAGD,GAAYE,KAAK1B,GAAS2B,MAAMtB,GACjDmB,GAAcD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst form = document.querySelector('.form');\nconst delay = form.elements.delay;\nconst step = form.elements.step;\nconst amount = form.elements.amount;\n\nform.addEventListener('submit', generetePromises);\n\nfunction generetePromises(event) {\n  event.preventDefault();\n  const countAmount = Number(amount.value);\n  const countStep = Number(step.value);\n  let countDelay = Number(delay.value);\n  // let numberPromise = 1;\n\n  for (let i = 1; i <= countAmount; i += 1) {\n    createPromise(i, countDelay).then(resolve).catch(reject);\n    countDelay += countStep;\n  }\n\n  // const id = setInterval(() => {\n  //   createPromise(numberPromise, countDelay).then(resolve).catch(reject);\n  //   countDelay += countStep;\n  //   numberPromise === countAmount ? clearInterval(id) : false;\n  //   numberPromise += 1;\n  // }, countDelay);\n}\nfunction resolve(result) {\n  Notiflix.Notify.failure(result);\n}\nfunction reject(result) {\n  Notiflix.Notify.failure(result);\n}\nfunction createPromise(position, delay) {\n  return (promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    // shouldResolve\n    //   ? resolve(`✅ Fulfilled promise ${position} in ${delay} ms`)\n    //   : reject(`❌ Rejected promise ${position} in ${delay} ms`);\n    setTimeout(() => {\n      shouldResolve\n        ? resolve(`✅ Fulfilled promise ${position} in ${delay} ms`)\n        : reject(`❌ Rejected promise ${position} in ${delay} ms`);\n    }, delay);\n  }));\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","elements","delay","$47d4ff9957288465$var$step","step","$47d4ff9957288465$var$amount","amount","$47d4ff9957288465$var$resolve","result","$parcel$interopDefault","Notify","failure","$47d4ff9957288465$var$reject","$47d4ff9957288465$var$createPromise","position","delay1","promise","Promise","resolve1","reject1","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","countAmount","Number","value","countStep","countDelay","i","then","catch"],"version":3,"file":"03-promises.a20c5018.js.map"}